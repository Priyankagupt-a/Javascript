{"ast":null,"code":"var _jsxFileName = \"/Users/priyanka/Desktop/Priyanka101/Javascript/Assignment/week3/21-nov/21-nov/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CustCrud from \"./component/CustCrud\";\n\n// Task Components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"1.  Create a component to perform CRUD operations on customers data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"a.  customer details :   CustomerId,  Name,  City, ContactNumber, Year, Photo, TotalPurchasesPerYear\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 101\n    }, this), \"b.  TotalPurchasesPerYear -- it means total amount he spend to but the products in our store\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 93\n    }, this), \"c.   For time being,  Photo -- give some online urls \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 54\n    }, this), \"d.  Try to add validations while perform create operations. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 61\n    }, this), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CustomerCRUD, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Home;\nconst CustomerCRUD = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Customer Management\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Perform CRUD operations on customer data here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c2 = CustomerCRUD;\nconst Analytics = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"1.  Create a component to perform CRUD operations on customers data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"a.  customer details :   CustomerId,  Name,  City, ContactNumber, Year, Photo, TotalPurchasesPerYear b.  TotalPurchasesPerYear -- it means total amount he spend to but the products in our store c.   For time being,  Photo -- give some online urls d.  Try to add validations while perform create operations. .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n_c3 = Analytics;\nconst Settings = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"App Settings\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Modify application preferences here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n\n// Main App Component\n_c4 = Settings;\nfunction App() {\n  _s();\n  const [activeComponent, setActiveComponent] = useState(\"Home\");\n\n  // Function to render the selected component\n  const renderComponent = () => {\n    switch (activeComponent) {\n      case \"CustomerCRUD\":\n        return /*#__PURE__*/_jsxDEV(CustomerCRUD, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      case \"Analytics\":\n        return /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      case \"Settings\":\n        return /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CustCrud, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \"?\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n// Inline Styles for Buttons and Content\n_s(App, \"ddjEQZjIWOizwTKG5z8RWEvDrsk=\");\n_c5 = App;\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  margin: \"5px\",\n  backgroundColor: \"#007BFF\",\n  color: \"#FFF\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\nconst contentStyle = {\n  padding: \"20px\",\n  backgroundColor: \"#f9f9f9\",\n  borderRadius: \"10px\",\n  width: \"80%\",\n  margin: \"0 auto\",\n  textAlign: \"left\"\n};\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"CustomerCRUD\");\n$RefreshReg$(_c3, \"Analytics\");\n$RefreshReg$(_c4, \"Settings\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","CustCrud","jsxDEV","_jsxDEV","Home","children","fileName","_jsxFileName","lineNumber","columnNumber","CustomerCRUD","_c","_c2","Analytics","_c3","Settings","_c4","App","_s","activeComponent","setActiveComponent","renderComponent","className","_c5","buttonStyle","padding","margin","backgroundColor","color","border","borderRadius","cursor","contentStyle","width","textAlign","$RefreshReg$"],"sources":["/Users/priyanka/Desktop/Priyanka101/Javascript/Assignment/week3/21-nov/21-nov/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CustCrud from \"./component/CustCrud\";\n\n// Task Components\nconst Home = () => (\n  <div>\n    <h4>1.  Create a component to perform CRUD operations on customers data</h4>\n    <p>\n\na.  customer details :   CustomerId,  Name,  City, ContactNumber, Year, Photo, TotalPurchasesPerYear<br></br>\nb.  TotalPurchasesPerYear -- it means total amount he spend to but the products in our store<br></br>\nc.   For time being,  Photo -- give some online urls <br></br>\nd.  Try to add validations while perform create operations. <br></br>.</p>\n\n\n<CustomerCRUD/>\n  </div>\n);\n\nconst CustomerCRUD = () => (\n  <div>\n    <h1>Customer Management</h1>\n    <p>Perform CRUD operations on customer data here.</p>\n    {/* You can implement the CRUD functionality here */}\n  </div>\n);\n\nconst Analytics = () => (\n  <div>\n    <h1>1.  Create a component to perform CRUD operations on customers data</h1>\n    <p>\n\na.  customer details :   CustomerId,  Name,  City, ContactNumber, Year, Photo, TotalPurchasesPerYear \nb.  TotalPurchasesPerYear -- it means total amount he spend to but the products in our store\nc.   For time being,  Photo -- give some online urls \nd.  Try to add validations while perform create operations. .</p>\n  </div>\n);\n\nconst Settings = () => (\n  <div>\n    <h1>App Settings</h1>\n    <p>Modify application preferences here.</p>\n  </div>\n);\n\n// Main App Component\nfunction App() {\n  const [activeComponent, setActiveComponent] = useState(\"Home\");\n\n  // Function to render the selected component\n  const renderComponent = () => {\n    switch (activeComponent) {\n      case \"CustomerCRUD\":\n        return <CustomerCRUD />;\n      case \"Analytics\":\n        return <Analytics />;\n      case \"Settings\":\n        return <Settings />;\n      default:\n        return <Home />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <CustCrud/>\n     ?\n    </div>\n  );\n}\n\n// Inline Styles for Buttons and Content\nconst buttonStyle = {\n  padding: \"10px 15px\",\n  margin: \"5px\",\n  backgroundColor: \"#007BFF\",\n  color: \"#FFF\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\",\n};\n\nconst contentStyle = {\n  padding: \"20px\",\n  backgroundColor: \"#f9f9f9\",\n  borderRadius: \"10px\",\n  width: \"80%\",\n  margin: \"0 auto\",\n  textAlign: \"left\",\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}